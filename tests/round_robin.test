<?php
class RoundRobinTestCase extends TourneyWebTestCase {
  protected $controller = 'RoundRobinController';
  
  /**
   * Test info.
   */
  public static function getInfo() {
    return array(
      'name' => t('Test Round Robin Tournament'),
      'description' => t('Steps through setting up a round robin tournament and playing all the way through.'),
      'group' => t('Tourney'),
    );
  }
  
  /**
   * Testing 4 contestants
   */
  public function testRoundRobin4() {
    // Create the tournament.
    $tournament_name = $this->createTourney($this->controller, 4);
    
    // Set contestants of the first match
    $edit = array();
    $edit['contestant1'] = 'user.2';
    $edit['contestant2'] = 'user.2';
    $this->drupalPost('tourney/match/1/edit', $edit, t('Save'));
    $this->assertRaw(t('Contestant 1 and Contestant 2 cannot be the same person'));
    
    $edit['contestant2'] = 'user.3';
    $this->drupalPost('tourney/match/1/edit', $edit, t('Save'));
    $this->assertRaw(t('Your match has been saved'));
    
    // First Contestant wins in match 1.
    $edit = array();
    $this->drupalPost('tourney/match/1', $edit, t('Win'), array(), array(), 'tourney-game-win-form');
    // Check to see if the winner is printed on the page.
    $this->assertRaw(t('user.2'));
    
    // Set contestants of the second match
    $edit = array();
    $edit['contestant1'] = 'user.4';
    $edit['contestant2'] = 'user.5';
    $this->drupalPost('tourney/match/2/edit', $edit, t('Save'));
    $this->assertRaw(t('Your match has been saved'));
    
    // Second Contestant wins in match 2.
    $edit = array();
    $this->drupalPost('tourney/match/2', $edit, t('Win'), array(), array(), 'tourney-game-win-form--2');
    // Check to see if the winner is printed on the page.
    $this->assertRaw(t('user.5'));
  }
}